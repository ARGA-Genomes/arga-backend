use async_graphql::OneofObject;

use crate::database::extensions::classification_filters::Classification;

#[derive(OneofObject, Debug)]
pub enum ClassificationFilter {
    Domain(String),
    Superkingdom(String),
    Kingdom(String),
    Subkingdom(String),
    Infrakingdom(String),
    Superphylum(String),
    Phylum(String),
    Subphylum(String),
    Infraphylum(String),
    Parvphylum(String),
    Gigaclass(String),
    Megaclass(String),
    Superclass(String),
    Class(String),
    Subclass(String),
    Infraclass(String),
    Subterclass(String),
    Superorder(String),
    Order(String),
    Hyporder(String),
    Minorder(String),
    Suborder(String),
    Infraorder(String),
    Parvorder(String),
    Epifamily(String),
    Superfamily(String),
    Family(String),
    Subfamily(String),
    Supertribe(String),
    Tribe(String),
    Subtribe(String),
    Genus(String),
    Subgenus(String),
    Species(String),
    Subspecies(String),
    Variety(String),
    Subvariety(String),
    Natio(String),
    Mutatio(String),
    Unranked(String),
    HigherTaxon(String),
    AggregateGenera(String),
    AggregateSpecies(String),
    Supercohort(String),
    Cohort(String),
    Subcohort(String),
    Division(String),
    IncertaeSedis(String),
    Infragenus(String),
    Section(String),
    Subsection(String),
    Subdivision(String),
    Regnum(String),
    Familia(String),
    Classis(String),
    Ordo(String),
    Varietas(String),
    Forma(String),
    Subforma(String),
    Subclassis(String),
    Superordo(String),
    Sectio(String),
    Subsectio(String),
    Nothovarietas(String),
    Subvarietas(String),
    Series(String),
    Subseries(String),
    Superspecies(String),
    Infraspecies(String),
    Subfamilia(String),
    Subordo(String),
    Regio(String),
    SpecialForm(String),
    Pathovar(String),
    Serovar(String),
    Biovar(String),
}

impl From<ClassificationFilter> for Classification {
    fn from(class: ClassificationFilter) -> Self {
        match class {
            ClassificationFilter::Domain(s) => Classification::Domain(s),
            ClassificationFilter::Superkingdom(s) => Classification::Superkingdom(s),
            ClassificationFilter::Kingdom(s) => Classification::Kingdom(s),
            ClassificationFilter::Subkingdom(s) => Classification::Subkingdom(s),
            ClassificationFilter::Infrakingdom(s) => Classification::Infrakingdom(s),
            ClassificationFilter::Superphylum(s) => Classification::Superphylum(s),
            ClassificationFilter::Phylum(s) => Classification::Phylum(s),
            ClassificationFilter::Subphylum(s) => Classification::Subphylum(s),
            ClassificationFilter::Infraphylum(s) => Classification::Infraphylum(s),
            ClassificationFilter::Parvphylum(s) => Classification::Parvphylum(s),
            ClassificationFilter::Gigaclass(s) => Classification::Gigaclass(s),
            ClassificationFilter::Megaclass(s) => Classification::Megaclass(s),
            ClassificationFilter::Superclass(s) => Classification::Superclass(s),
            ClassificationFilter::Class(s) => Classification::Class(s),
            ClassificationFilter::Subclass(s) => Classification::Subclass(s),
            ClassificationFilter::Infraclass(s) => Classification::Infraclass(s),
            ClassificationFilter::Subterclass(s) => Classification::Subterclass(s),
            ClassificationFilter::Superorder(s) => Classification::Superorder(s),
            ClassificationFilter::Order(s) => Classification::Order(s),
            ClassificationFilter::Hyporder(s) => Classification::Hyporder(s),
            ClassificationFilter::Minorder(s) => Classification::Minorder(s),
            ClassificationFilter::Suborder(s) => Classification::Suborder(s),
            ClassificationFilter::Infraorder(s) => Classification::Infraorder(s),
            ClassificationFilter::Parvorder(s) => Classification::Parvorder(s),
            ClassificationFilter::Epifamily(s) => Classification::Epifamily(s),
            ClassificationFilter::Superfamily(s) => Classification::Superfamily(s),
            ClassificationFilter::Family(s) => Classification::Family(s),
            ClassificationFilter::Subfamily(s) => Classification::Subfamily(s),
            ClassificationFilter::Supertribe(s) => Classification::Supertribe(s),
            ClassificationFilter::Tribe(s) => Classification::Tribe(s),
            ClassificationFilter::Subtribe(s) => Classification::Subtribe(s),
            ClassificationFilter::Genus(s) => Classification::Genus(s),
            ClassificationFilter::Subgenus(s) => Classification::Subgenus(s),
            ClassificationFilter::Species(s) => Classification::Species(s),
            ClassificationFilter::Subspecies(s) => Classification::Subspecies(s),
            ClassificationFilter::Variety(s) => Classification::Variety(s),
            ClassificationFilter::Subvariety(s) => Classification::Subvariety(s),
            ClassificationFilter::Natio(s) => Classification::Natio(s),
            ClassificationFilter::Mutatio(s) => Classification::Mutatio(s),
            ClassificationFilter::Unranked(s) => Classification::Unranked(s),
            ClassificationFilter::HigherTaxon(s) => Classification::HigherTaxon(s),
            ClassificationFilter::AggregateGenera(s) => Classification::AggregateGenera(s),
            ClassificationFilter::AggregateSpecies(s) => Classification::AggregateSpecies(s),
            ClassificationFilter::Supercohort(s) => Classification::Supercohort(s),
            ClassificationFilter::Cohort(s) => Classification::Cohort(s),
            ClassificationFilter::Subcohort(s) => Classification::Subcohort(s),
            ClassificationFilter::Division(s) => Classification::Division(s),
            ClassificationFilter::IncertaeSedis(s) => Classification::IncertaeSedis(s),
            ClassificationFilter::Infragenus(s) => Classification::Infragenus(s),
            ClassificationFilter::Section(s) => Classification::Section(s),
            ClassificationFilter::Subsection(s) => Classification::Subsection(s),
            ClassificationFilter::Subdivision(s) => Classification::Subdivision(s),
            ClassificationFilter::Regnum(s) => Classification::Regnum(s),
            ClassificationFilter::Familia(s) => Classification::Familia(s),
            ClassificationFilter::Classis(s) => Classification::Classis(s),
            ClassificationFilter::Ordo(s) => Classification::Ordo(s),
            ClassificationFilter::Varietas(s) => Classification::Varietas(s),
            ClassificationFilter::Forma(s) => Classification::Forma(s),
            ClassificationFilter::Subforma(s) => Classification::Subforma(s),
            ClassificationFilter::Subclassis(s) => Classification::Subclassis(s),
            ClassificationFilter::Superordo(s) => Classification::Superordo(s),
            ClassificationFilter::Sectio(s) => Classification::Sectio(s),
            ClassificationFilter::Subsectio(s) => Classification::Subsectio(s),
            ClassificationFilter::Nothovarietas(s) => Classification::Nothovarietas(s),
            ClassificationFilter::Subvarietas(s) => Classification::Subvarietas(s),
            ClassificationFilter::Series(s) => Classification::Series(s),
            ClassificationFilter::Subseries(s) => Classification::Subseries(s),
            ClassificationFilter::Superspecies(s) => Classification::Superspecies(s),
            ClassificationFilter::Infraspecies(s) => Classification::Infraspecies(s),
            ClassificationFilter::Subfamilia(s) => Classification::Subfamilia(s),
            ClassificationFilter::Subordo(s) => Classification::Subordo(s),
            ClassificationFilter::Regio(s) => Classification::Regio(s),
            ClassificationFilter::SpecialForm(s) => Classification::SpecialForm(s),
            ClassificationFilter::Pathovar(s) => Classification::Pathovar(s),
            ClassificationFilter::Serovar(s) => Classification::Serovar(s),
            ClassificationFilter::Biovar(s) => Classification::Biovar(s),
        }
    }
}
