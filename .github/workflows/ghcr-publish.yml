name: Build image and publish to ghcr.io

on:
  push:
    branches: [ "main" ]


env:
  REGISTRY: ghcr.io/arga-genomes

  nix_conf: |
    substituters = https://cache.nixos.org/ https://nix-community.cachix.org
    trusted-public-keys = cache.nixos.org-1:6NCHdD59X431o0gWypbMrAURkbJ16ZPMQFGspcDShjY= nix-community.cachix.org-1:mB9FSh9qf2dCimDSUo8Zy7bkq5CX+/rkCWyvRCYg3Fs=
    keep-env-derivations = true
    keep-outputs = true


jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install nix
        uses: nixbuild/nix-quick-install-action@v30
        with:
          nix_conf: ${{ env.nix_conf }}

      - name: Restore and save Nix store
        uses: nix-community/cache-nix-action@v6
        with:
          primary-key: build-${{ runner.os }}-${{ hashFiles('**/flake.nix', '**/flake.lock') }}
          purge: true
          purge-prefixes: build-${{ runner.os }}-
          purge-created: 0
          purge-primary-key: never
          gc-max-store-size: 0


      - name: Log in to the GitHub container registry
        uses: redhat-actions/podman-login@v1
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build container image
        run: nix build .#oci

      - name: Load image into podamn store
        run: |
          podman load -i ./result
          podman tag backend ${{ github.sha }}

      - name: Push to GitHub container registry
        id: push-to-ghcr
        uses: redhat-actions/push-to-registry@v2
        with:
          image: backend
          tags: latest ${{ github.sha }}
          registry: ${{ env.REGISTRY }}


  build_migrator:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    env:
      REGISTRY: ghcr.io/arga-genomes

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install nix
        uses: nixbuild/nix-quick-install-action@v30
        with:
          nix_conf: ${{ env.nix_conf }}

      - name: Restore and save Nix store
        uses: nix-community/cache-nix-action@v6
        with:
          primary-key: build-migrator-${{ runner.os }}-${{ hashFiles('**/flake.nix', '**/flake.lock') }}
          purge: true
          purge-prefixes: build-migrator-${{ runner.os }}-
          purge-created: 0
          purge-primary-key: never
          gc-max-store-size: 0

      - name: Log in to the GitHub container registry
        uses: redhat-actions/podman-login@v1
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build migrator image
        run: nix build .#migrator

      - name: Load migrator into podamn store
        run: |
          podman load -i ./result
          podman tag backend-migrator ${{ github.sha }}

      - name: Push to GitHub container registry
        id: push-to-ghcr
        uses: redhat-actions/push-to-registry@v2
        with:
          image: backend-migrator
          tags: latest ${{ github.sha }}
          registry: ${{ env.REGISTRY }}


  notify-arga-ops-migrator:
    needs: [build_migrator]
    runs-on: ubuntu-latest

    env:
      registry: ghcr.io/arga-genomes
      image_name: backend-migrator
      image_tag: ${{ github.sha }}
      actor: ${{ github.triggering_actor }}
      repository: ${{ github.repository }}
      ref: ${{ github.ref }}
      sha: ${{ github.sha }}
      workflow: ${{ github.workflow }}
      workflow_ref: ${{ github.workflow_ref }}
      workflow_sha: ${{ github.workflow_sha }}
      run_id: ${{ github.run_id }}
      run_number: ${{ github.run_number }}
      run_attempt: ${{ github.run_attempt }}

    steps:
      - name: Dump payload data
        run: echo '${{ toJson(env) }}'

      - name: Notify arga-ops about the new version
        uses: peter-evans/repository-dispatch@v2
        with:
          token: ${{ secrets.ARGA_OPS_PERSONAL_TOKEN }}
          repository: arga-genomes/arga-ops
          event-type: published
          client-payload: '{"data" : ${{ toJson(env) }} }'

  notify-arga-ops:
    needs: [build, build_migrator, notify-arga-ops-migrator]
    runs-on: ubuntu-latest

    env:
      registry: ghcr.io/arga-genomes
      image_name: backend
      image_tag: ${{ github.sha }}
      actor: ${{ github.triggering_actor }}
      repository: ${{ github.repository }}
      ref: ${{ github.ref }}
      sha: ${{ github.sha }}
      workflow: ${{ github.workflow }}
      workflow_ref: ${{ github.workflow_ref }}
      workflow_sha: ${{ github.workflow_sha }}
      run_id: ${{ github.run_id }}
      run_number: ${{ github.run_number }}
      run_attempt: ${{ github.run_attempt }}

    steps:
      - name: Dump payload data
        run: echo '${{ toJson(env) }}'

      - name: Notify arga-ops about the new version
        uses: peter-evans/repository-dispatch@v2
        with:
          token: ${{ secrets.ARGA_OPS_PERSONAL_TOKEN }}
          repository: arga-genomes/arga-ops
          event-type: published
          client-payload: '{"data" : ${{ toJson(env) }} }'
